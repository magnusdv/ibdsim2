% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/twoLocusIBD.R
\name{estimateIBD}
\alias{estimateIBD}
\alias{estimateTwoLocusIBD}
\alias{estimateOneLocusIBD}
\title{Estimate one-locus and two-locus IBD coefficients}
\usage{
estimateTwoLocusIBD(
  x,
  ids,
  rho = NULL,
  cM = NULL,
  Nsim,
  Xchrom = FALSE,
  verbose = FALSE,
  ...
)

estimateOneLocusIBD(x, ids, Nsim, Xchrom = FALSE, verbose = FALSE, ...)
}
\arguments{
\item{x}{A pedigree in the form of a \code{\link[pedtools:ped]{pedtools::ped()}} object.}

\item{ids}{A character (or coercible to character) of length 2.}

\item{rho}{A scalar in the interval \verb{[0, 0.5]}: the recombination fraction
between the two loci, converted to centiMorgan using Haldanes map function:
cM = -50 * log(1 - 2*rho). Either \code{rho} or \code{cM} (but not both) must be
non-NULL.}

\item{cM}{A non-negative number: the genetic distance between the two loci,
given in centiMorgans. Either \code{rho} or \code{cM} (but not both) must be
non-NULL.}

\item{Nsim}{The number of simulations.}

\item{Xchrom}{A logical indicating if the loci are X-linked (if TRUE) or
autosomal (FALSE).}

\item{verbose}{A logical.}

\item{...}{Further arguments passed on to \code{\link[=ibdsim]{ibdsim()}}, e.g. \code{seed}.}
}
\value{
\code{estimateOneLocusIBD()} returns a numeric vector of length 3, with
the estimated values of \eqn{(\kappa[0],\kappa[1],\kappa[2]}

\code{estimateTwoLocusIBD()} returns symmetric, numerical 3*3 matrix, with the
estimated values of \eqn{\kappa[i,j]}{k_i_j}, for i,j = 0,1,2.
}
\description{
Estimate by simulation the IBD coefficients \eqn{(\kappa[0], \kappa[1],
\kappa[2])} of two non-inbred pedigree members, and also the matrix of \emph{two-locus} IBD coefficients
\eqn{(\kappa[i,j])} at a given recombination rate.
}
\details{
Alleles segregating in a pedigree are said to be \emph{identical by descent} (IBD) if
they originate from the same ancestral allele within the pedigree.

For two non-inbred individuals A and B, their IBD coefficients of \eqn{\kappa
= (\kappa[0], \kappa[1], \kappa[2])} are defined as the probabilities
\deqn{\kappa[i] = Pr(A and B share i alleles IBD at a given autosomal locus).}
Similarly, the \emph{two-locus} IBD coefficients of A and B are defined by
\deqn{\kappa[i,j] = Pr(A and B share i alleles IBD at locus 1, and j alleles
IBD at locus 2),} where \eqn{0 \leq i,j \leq 2}{0 <= i,j <= 2}.

While the single-locus IBD coefficients depend only on the genealogy relating
the two individuals, the two-locus coefficients also depend on the genetic
distance between the loci. In particular, if the loci are completely linked
(\code{rho = 0}, or equivalently, \code{cM = 0}) the IBD matrix is diagonal with
\eqn{\kappa[i,i] = \kappa[i]}. If the loci are completely \emph{unlinked} (\code{rho = 0.5}; \code{cM = Inf}) then \eqn{\kappa[i,j] = \kappa[i]*\kappa[j]}. (See
examples.)

X chromosomal coefficients: If either A or B is male, the IBD status at X
chromosomal loci cannot be 2. This is reflected by NA entries in the output.
}
\examples{
############################
### Example 1: Full siblings
############################
x = nuclearPed(2)
Nsim = 100 # Should be increased substantially

### 1a) One-locus kappa estimates (autosomal and X):
k.hat = estimateOneLocusIBD(x, ids = 3:4, 
                            Nsim = Nsim, seed = 123)
# k.hat.X = estimateOneLocusIBD(x, ids = 3:4, Nsim = Nsim, 
#                               Xchrom = TRUE, seed = 123)

### 1b) Two-locus IBD estimation
# Completely linked, autosomal
rho = 0
k2.linked = estimateTwoLocusIBD(x, ids = 3:4, rho = rho, 
                                Nsim = Nsim, seed = 123)
stopifnot(identical(diag(k2.linked), k.hat))

# Completely unlinked, autosomal
rho = 0.5
k2.unlinked = estimateTwoLocusIBD(x, ids = 3:4, rho = rho, 
                                  Nsim = Nsim, seed = 123)
stopifnot(identical(k2.unlinked, outer(k.hat, k.hat)))

# Recombination rate 10\%, autosomal
rho = 0.1
r1 = estimateTwoLocusIBD(x, ids = 3:4, rho = rho, 
                         Nsim = Nsim, seed = 17)

# Alternatively, specify cM directly
cM = -50 * log(1 - 2*rho) # Haldane's map
r2 = estimateTwoLocusIBD(x, ids = 3:4, cM = cM, 
                         Nsim = Nsim, seed = 17)
stopifnot(identical(r1, r2))

\donttest{
### 1c) Two-locus IBD on X
# Completely linked
rho = 0
k2.linked.X = estimateTwoLocusIBD(x, ids = 3:4, rho = rho, Xchrom = TRUE,
                                  Nsim = Nsim, seed = 123)
stopifnot(identical(diag(k2.linked.X), k.hat.X))

# Completely unlinked
rho = 0.5
k2.unlinked.X = estimateTwoLocusIBD(x, ids = 3:4, rho = rho, Xchrom = TRUE, 
                                    Nsim = Nsim, seed = 123)
stopifnot(identical(k2.unlinked.X, outer(k.hat.X, k.hat.X)))

# Recombination rate 10\%, X chromosome
rho = 0.1
cM = -50 * log(1 - 2*rho)
r1.X = estimateTwoLocusIBD(x, ids = 3:4, rho = rho, Xchrom = TRUE,
                           Nsim = Nsim, seed = 123)
r2.X = estimateTwoLocusIBD(x, ids = 3:4, cM = cM, Xchrom = TRUE,
                           Nsim = Nsim, seed = 123)
stopifnot(identical(r1.X, r2.X))
}

### Example 2: Grandparent vs half sib vs uncle
# These are indistinguishable with unlinked loci, see e.g.
# pages 182-183 in Egeland, Kling and Mostad (2016).
# Each simulations followed by exact counterpart.

rho = 0.25; R = .5 * (rho^2 + (1-rho)^2) 
Nsim = 10 # Should be increased to at least 10000

# Grandparent/grandchild
G = linearPed(2); G.ids = c(1,5); #plot(G, shaded = G.ids)
estimateTwoLocusIBD(G, G.ids, rho = rho, Nsim = Nsim)[2,2]
.5*(1-rho) # exact

# Half sibs
H = halfSibPed(); H.ids = c(4,5); # plot(H, shaded = H.ids)
estimateTwoLocusIBD(H, H.ids, rho = rho, Nsim = Nsim)[2,2]
R # exact

# Uncle
U = cousinPed(0, removal = 1); U.ids = c(3,6); # plot(U, shaded = U.ids)
estimateTwoLocusIBD(U, U.ids, rho = rho, Nsim = Nsim)[2,2]
(1-rho) * R + rho/4 # exact

### Example 3: X chromosome, granddaughter vs maternal grandfather.
y = linearPed(2, sex = c(2, 2))
rho = 0.25
Nsim = 10
# estimateTwoLocusIBD(y, c(1,5), rho = rho, Nsim = Nsim, Xchrom = TRUE)

# Exact
matrix(c(1-rho, rho, rho, 1-rho)/2, ncol = 2)

}
